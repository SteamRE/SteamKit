import "steammessages_unified_base.steamclient.proto";

option cc_generic_services = true;

option java_package = "org.opensteamworks.steamkit.base.proto.steamclient";
option java_multiple_files = true;

message CMsgTest_MessageToClient_Request {
	optional string some_text = 1 [(description) = "Some string."];
}

message CMsgTest_MessageToClient_Response {
	optional string some_text = 1 [(description) = "Some string."];
}

message CMsgTest_NotifyClient_Notification {
	optional string some_text = 1 [(description) = "Some string."];
}

message CMsgTest_MessageToServer_Request {
	optional string some_text = 1 [(description) = "Some string."];
}

message CMsgTest_MessageToServer_Response {
	optional string some_text = 1 [(description) = "Some string."];
}

message CMsgTest_NotifyServer_Notification {
	optional string some_text = 1 [(description) = "Some string."];
}

service TestSteamClient {
	option (service_execution_site) = k_EProtoExecutionSiteSteamClient;
	rpc MessageToClient (.CMsgTest_MessageToClient_Request) returns (.CMsgTest_MessageToClient_Response) {
		option (method_description) = "Some description - MessageToClient.";
	}
	rpc NotifyClient (.CMsgTest_NotifyClient_Notification) returns (.NoResponse) {
		option (method_description) = "Some description - NotifyClient.";
	}
}
service TestServerFromClient {
	rpc MessageToServer (.CMsgTest_MessageToServer_Request) returns (.CMsgTest_MessageToServer_Response) {
		option (method_description) = "Some description - MessageToServer.";
	}
	rpc NotifyServer (.CMsgTest_NotifyServer_Notification) returns (.NoResponse) {
		option (method_description) = "Some description - NotifyServer.";
	}
}
