// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: steammessages_auth.steamclient.proto
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace SteamKit2.Internal
{

    [global::ProtoBuf.ProtoContract()]
    public partial class CCloudGaming_CreateNonce_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string platform
        {
            get => __pbn__platform ?? "";
            set => __pbn__platform = value;
        }
        public bool ShouldSerializeplatform() => __pbn__platform != null;
        public void Resetplatform() => __pbn__platform = null;
        private string __pbn__platform;

        [global::ProtoBuf.ProtoMember(2)]
        public uint appid
        {
            get => __pbn__appid.GetValueOrDefault();
            set => __pbn__appid = value;
        }
        public bool ShouldSerializeappid() => __pbn__appid != null;
        public void Resetappid() => __pbn__appid = null;
        private uint? __pbn__appid;

        [global::ProtoBuf.ProtoMember(3)]
        public bool request_trial
        {
            get => __pbn__request_trial.GetValueOrDefault();
            set => __pbn__request_trial = value;
        }
        public bool ShouldSerializerequest_trial() => __pbn__request_trial != null;
        public void Resetrequest_trial() => __pbn__request_trial = null;
        private bool? __pbn__request_trial;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CCloudGaming_CreateNonce_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string nonce
        {
            get => __pbn__nonce ?? "";
            set => __pbn__nonce = value;
        }
        public bool ShouldSerializenonce() => __pbn__nonce != null;
        public void Resetnonce() => __pbn__nonce = null;
        private string __pbn__nonce;

        [global::ProtoBuf.ProtoMember(2)]
        public uint expiry
        {
            get => __pbn__expiry.GetValueOrDefault();
            set => __pbn__expiry = value;
        }
        public bool ShouldSerializeexpiry() => __pbn__expiry != null;
        public void Resetexpiry() => __pbn__expiry = null;
        private uint? __pbn__expiry;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CCloudGaming_GetTimeRemaining_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string platform
        {
            get => __pbn__platform ?? "";
            set => __pbn__platform = value;
        }
        public bool ShouldSerializeplatform() => __pbn__platform != null;
        public void Resetplatform() => __pbn__platform = null;
        private string __pbn__platform;

        [global::ProtoBuf.ProtoMember(2)]
        public global::System.Collections.Generic.List<uint> appid_list { get; } = new global::System.Collections.Generic.List<uint>();

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CCloudGaming_TimeRemaining : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public uint appid
        {
            get => __pbn__appid.GetValueOrDefault();
            set => __pbn__appid = value;
        }
        public bool ShouldSerializeappid() => __pbn__appid != null;
        public void Resetappid() => __pbn__appid = null;
        private uint? __pbn__appid;

        [global::ProtoBuf.ProtoMember(2)]
        public uint minutes_remaining
        {
            get => __pbn__minutes_remaining.GetValueOrDefault();
            set => __pbn__minutes_remaining = value;
        }
        public bool ShouldSerializeminutes_remaining() => __pbn__minutes_remaining != null;
        public void Resetminutes_remaining() => __pbn__minutes_remaining = null;
        private uint? __pbn__minutes_remaining;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CCloudGaming_GetTimeRemaining_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(2)]
        public global::System.Collections.Generic.List<CCloudGaming_TimeRemaining> entries { get; } = new global::System.Collections.Generic.List<CCloudGaming_TimeRemaining>();

    }

    public interface ICloudGaming
    {
        CCloudGaming_CreateNonce_Response CreateNonce(CCloudGaming_CreateNonce_Request request);
        CCloudGaming_GetTimeRemaining_Response GetTimeRemaining(CCloudGaming_GetTimeRemaining_Request request);
    }

}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion
