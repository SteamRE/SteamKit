// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: steammessages_accounthardware.steamclient.proto
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace SteamKit2.Internal
{

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_RegisterSteamController_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue("")]
        public string controller_code
        {
            get => __pbn__controller_code ?? "";
            set => __pbn__controller_code = value;
        }
        public bool ShouldSerializecontroller_code() => __pbn__controller_code != null;
        public void Resetcontroller_code() => __pbn__controller_code = null;
        private string __pbn__controller_code;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_RegisterSteamController_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_CompleteSteamControllerRegistration_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue("")]
        public string controller_code
        {
            get => __pbn__controller_code ?? "";
            set => __pbn__controller_code = value;
        }
        public bool ShouldSerializecontroller_code() => __pbn__controller_code != null;
        public void Resetcontroller_code() => __pbn__controller_code = null;
        private string __pbn__controller_code;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_CompleteSteamControllerRegistration_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_QueryAccountsRegisteredToSerial_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue("")]
        public string controller_code
        {
            get => __pbn__controller_code ?? "";
            set => __pbn__controller_code = value;
        }
        public bool ShouldSerializecontroller_code() => __pbn__controller_code != null;
        public void Resetcontroller_code() => __pbn__controller_code = null;
        private string __pbn__controller_code;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_QueryAccountsRegisteredToSerial_Accounts : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public uint accountid
        {
            get => __pbn__accountid.GetValueOrDefault();
            set => __pbn__accountid = value;
        }
        public bool ShouldSerializeaccountid() => __pbn__accountid != null;
        public void Resetaccountid() => __pbn__accountid = null;
        private uint? __pbn__accountid;

        [global::ProtoBuf.ProtoMember(2)]
        public bool registration_complete
        {
            get => __pbn__registration_complete.GetValueOrDefault();
            set => __pbn__registration_complete = value;
        }
        public bool ShouldSerializeregistration_complete() => __pbn__registration_complete != null;
        public void Resetregistration_complete() => __pbn__registration_complete = null;
        private bool? __pbn__registration_complete;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_QueryAccountsRegisteredToSerial_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public global::System.Collections.Generic.List<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> accounts { get; } = new global::System.Collections.Generic.List<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts>();

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_SteamControllerSetConfig_ControllerConfig : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string appidorname
        {
            get => __pbn__appidorname ?? "";
            set => __pbn__appidorname = value;
        }
        public bool ShouldSerializeappidorname() => __pbn__appidorname != null;
        public void Resetappidorname() => __pbn__appidorname = null;
        private string __pbn__appidorname;

        [global::ProtoBuf.ProtoMember(2)]
        public ulong publishedfileid
        {
            get => __pbn__publishedfileid.GetValueOrDefault();
            set => __pbn__publishedfileid = value;
        }
        public bool ShouldSerializepublishedfileid() => __pbn__publishedfileid != null;
        public void Resetpublishedfileid() => __pbn__publishedfileid = null;
        private ulong? __pbn__publishedfileid;

        [global::ProtoBuf.ProtoMember(3)]
        [global::System.ComponentModel.DefaultValue("")]
        public string templatename
        {
            get => __pbn__templatename ?? "";
            set => __pbn__templatename = value;
        }
        public bool ShouldSerializetemplatename() => __pbn__templatename != null;
        public void Resettemplatename() => __pbn__templatename = null;
        private string __pbn__templatename;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_SteamControllerSetConfig_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue("")]
        public string controller_code
        {
            get => __pbn__controller_code ?? "";
            set => __pbn__controller_code = value;
        }
        public bool ShouldSerializecontroller_code() => __pbn__controller_code != null;
        public void Resetcontroller_code() => __pbn__controller_code = null;
        private string __pbn__controller_code;

        [global::ProtoBuf.ProtoMember(3)]
        public uint accountid
        {
            get => __pbn__accountid.GetValueOrDefault();
            set => __pbn__accountid = value;
        }
        public bool ShouldSerializeaccountid() => __pbn__accountid != null;
        public void Resetaccountid() => __pbn__accountid = null;
        private uint? __pbn__accountid;

        [global::ProtoBuf.ProtoMember(4)]
        public global::System.Collections.Generic.List<CAccountHardware_SteamControllerSetConfig_ControllerConfig> configurations { get; } = new global::System.Collections.Generic.List<CAccountHardware_SteamControllerSetConfig_ControllerConfig>();

        [global::ProtoBuf.ProtoMember(5)]
        [global::System.ComponentModel.DefaultValue(2)]
        public int controller_type
        {
            get => __pbn__controller_type ?? 2;
            set => __pbn__controller_type = value;
        }
        public bool ShouldSerializecontroller_type() => __pbn__controller_type != null;
        public void Resetcontroller_type() => __pbn__controller_type = null;
        private int? __pbn__controller_type;

        [global::ProtoBuf.ProtoMember(6)]
        [global::System.ComponentModel.DefaultValue(false)]
        public bool only_for_this_serial
        {
            get => __pbn__only_for_this_serial ?? false;
            set => __pbn__only_for_this_serial = value;
        }
        public bool ShouldSerializeonly_for_this_serial() => __pbn__only_for_this_serial != null;
        public void Resetonly_for_this_serial() => __pbn__only_for_this_serial = null;
        private bool? __pbn__only_for_this_serial;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_SteamControllerSetConfig_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_SteamControllerGetConfig_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue("")]
        public string controller_code
        {
            get => __pbn__controller_code ?? "";
            set => __pbn__controller_code = value;
        }
        public bool ShouldSerializecontroller_code() => __pbn__controller_code != null;
        public void Resetcontroller_code() => __pbn__controller_code = null;
        private string __pbn__controller_code;

        [global::ProtoBuf.ProtoMember(3)]
        public uint accountid
        {
            get => __pbn__accountid.GetValueOrDefault();
            set => __pbn__accountid = value;
        }
        public bool ShouldSerializeaccountid() => __pbn__accountid != null;
        public void Resetaccountid() => __pbn__accountid = null;
        private uint? __pbn__accountid;

        [global::ProtoBuf.ProtoMember(4)]
        [global::System.ComponentModel.DefaultValue("")]
        public string appidorname
        {
            get => __pbn__appidorname ?? "";
            set => __pbn__appidorname = value;
        }
        public bool ShouldSerializeappidorname() => __pbn__appidorname != null;
        public void Resetappidorname() => __pbn__appidorname = null;
        private string __pbn__appidorname;

        [global::ProtoBuf.ProtoMember(5)]
        [global::System.ComponentModel.DefaultValue(2)]
        public int controller_type
        {
            get => __pbn__controller_type ?? 2;
            set => __pbn__controller_type = value;
        }
        public bool ShouldSerializecontroller_type() => __pbn__controller_type != null;
        public void Resetcontroller_type() => __pbn__controller_type = null;
        private int? __pbn__controller_type;

        [global::ProtoBuf.ProtoMember(6)]
        [global::System.ComponentModel.DefaultValue(false)]
        public bool only_for_this_serial
        {
            get => __pbn__only_for_this_serial ?? false;
            set => __pbn__only_for_this_serial = value;
        }
        public bool ShouldSerializeonly_for_this_serial() => __pbn__only_for_this_serial != null;
        public void Resetonly_for_this_serial() => __pbn__only_for_this_serial = null;
        private bool? __pbn__only_for_this_serial;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_SteamControllerGetConfig_ControllerConfig : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string appidorname
        {
            get => __pbn__appidorname ?? "";
            set => __pbn__appidorname = value;
        }
        public bool ShouldSerializeappidorname() => __pbn__appidorname != null;
        public void Resetappidorname() => __pbn__appidorname = null;
        private string __pbn__appidorname;

        [global::ProtoBuf.ProtoMember(2)]
        public ulong publishedfileid
        {
            get => __pbn__publishedfileid.GetValueOrDefault();
            set => __pbn__publishedfileid = value;
        }
        public bool ShouldSerializepublishedfileid() => __pbn__publishedfileid != null;
        public void Resetpublishedfileid() => __pbn__publishedfileid = null;
        private ulong? __pbn__publishedfileid;

        [global::ProtoBuf.ProtoMember(3)]
        [global::System.ComponentModel.DefaultValue("")]
        public string templatename
        {
            get => __pbn__templatename ?? "";
            set => __pbn__templatename = value;
        }
        public bool ShouldSerializetemplatename() => __pbn__templatename != null;
        public void Resettemplatename() => __pbn__templatename = null;
        private string __pbn__templatename;

        [global::ProtoBuf.ProtoMember(4)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(5)]
        [global::System.ComponentModel.DefaultValue(false)]
        public bool autosave
        {
            get => __pbn__autosave ?? false;
            set => __pbn__autosave = value;
        }
        public bool ShouldSerializeautosave() => __pbn__autosave != null;
        public void Resetautosave() => __pbn__autosave = null;
        private bool? __pbn__autosave;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_SteamControllerGetConfig_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public global::System.Collections.Generic.List<CAccountHardware_SteamControllerGetConfig_ControllerConfig> configurations { get; } = new global::System.Collections.Generic.List<CAccountHardware_SteamControllerGetConfig_ControllerConfig>();

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_DeRegisterSteamController_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue("")]
        public string controller_code
        {
            get => __pbn__controller_code ?? "";
            set => __pbn__controller_code = value;
        }
        public bool ShouldSerializecontroller_code() => __pbn__controller_code != null;
        public void Resetcontroller_code() => __pbn__controller_code = null;
        private string __pbn__controller_code;

        [global::ProtoBuf.ProtoMember(3)]
        public uint accountid
        {
            get => __pbn__accountid.GetValueOrDefault();
            set => __pbn__accountid = value;
        }
        public bool ShouldSerializeaccountid() => __pbn__accountid != null;
        public void Resetaccountid() => __pbn__accountid = null;
        private uint? __pbn__accountid;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_DeRegisterSteamController_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_SetPersonalizationFile_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        public ulong publishedfileid
        {
            get => __pbn__publishedfileid.GetValueOrDefault();
            set => __pbn__publishedfileid = value;
        }
        public bool ShouldSerializepublishedfileid() => __pbn__publishedfileid != null;
        public void Resetpublishedfileid() => __pbn__publishedfileid = null;
        private ulong? __pbn__publishedfileid;

        [global::ProtoBuf.ProtoMember(3)]
        public uint accountid
        {
            get => __pbn__accountid.GetValueOrDefault();
            set => __pbn__accountid = value;
        }
        public bool ShouldSerializeaccountid() => __pbn__accountid != null;
        public void Resetaccountid() => __pbn__accountid = null;
        private uint? __pbn__accountid;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_SetPersonalizationFile_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_GetPersonalizationFile_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        public uint accountid
        {
            get => __pbn__accountid.GetValueOrDefault();
            set => __pbn__accountid = value;
        }
        public bool ShouldSerializeaccountid() => __pbn__accountid != null;
        public void Resetaccountid() => __pbn__accountid = null;
        private uint? __pbn__accountid;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_GetPersonalizationFile_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public ulong publishedfileid
        {
            get => __pbn__publishedfileid.GetValueOrDefault();
            set => __pbn__publishedfileid = value;
        }
        public bool ShouldSerializepublishedfileid() => __pbn__publishedfileid != null;
        public void Resetpublishedfileid() => __pbn__publishedfileid = null;
        private ulong? __pbn__publishedfileid;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_VRCompatibilityCheck_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string product_name
        {
            get => __pbn__product_name ?? "";
            set => __pbn__product_name = value;
        }
        public bool ShouldSerializeproduct_name() => __pbn__product_name != null;
        public void Resetproduct_name() => __pbn__product_name = null;
        private string __pbn__product_name;

        [global::ProtoBuf.ProtoMember(2)]
        public global::System.Collections.Generic.List<Pair> values { get; } = new global::System.Collections.Generic.List<Pair>();

        [global::ProtoBuf.ProtoContract()]
        public partial class Pair : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1)]
            [global::System.ComponentModel.DefaultValue("")]
            public string key
            {
                get => __pbn__key ?? "";
                set => __pbn__key = value;
            }
            public bool ShouldSerializekey() => __pbn__key != null;
            public void Resetkey() => __pbn__key = null;
            private string __pbn__key;

            [global::ProtoBuf.ProtoMember(2)]
            [global::System.ComponentModel.DefaultValue("")]
            public string value
            {
                get => __pbn__value ?? "";
                set => __pbn__value = value;
            }
            public bool ShouldSerializevalue() => __pbn__value != null;
            public void Resetvalue() => __pbn__value = null;
            private string __pbn__value;

        }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_VRCompatibilityCheck_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        public global::System.Collections.Generic.List<Pair> values { get; } = new global::System.Collections.Generic.List<Pair>();

        [global::ProtoBuf.ProtoMember(2)]
        public global::System.Collections.Generic.List<ComponentDisplay> components { get; } = new global::System.Collections.Generic.List<ComponentDisplay>();

        [global::ProtoBuf.ProtoContract()]
        public partial class Pair : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1)]
            [global::System.ComponentModel.DefaultValue("")]
            public string key
            {
                get => __pbn__key ?? "";
                set => __pbn__key = value;
            }
            public bool ShouldSerializekey() => __pbn__key != null;
            public void Resetkey() => __pbn__key = null;
            private string __pbn__key;

            [global::ProtoBuf.ProtoMember(2)]
            [global::System.ComponentModel.DefaultValue("")]
            public string value
            {
                get => __pbn__value ?? "";
                set => __pbn__value = value;
            }
            public bool ShouldSerializevalue() => __pbn__value != null;
            public void Resetvalue() => __pbn__value = null;
            private string __pbn__value;

        }

        [global::ProtoBuf.ProtoContract()]
        public partial class ComponentDisplay : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1)]
            [global::System.ComponentModel.DefaultValue("")]
            public string name
            {
                get => __pbn__name ?? "";
                set => __pbn__name = value;
            }
            public bool ShouldSerializename() => __pbn__name != null;
            public void Resetname() => __pbn__name = null;
            private string __pbn__name;

            [global::ProtoBuf.ProtoMember(2)]
            [global::System.ComponentModel.DefaultValue("")]
            public string image
            {
                get => __pbn__image ?? "";
                set => __pbn__image = value;
            }
            public bool ShouldSerializeimage() => __pbn__image != null;
            public void Resetimage() => __pbn__image = null;
            private string __pbn__image;

            [global::ProtoBuf.ProtoMember(3)]
            [global::System.ComponentModel.DefaultValue("")]
            public string value
            {
                get => __pbn__value ?? "";
                set => __pbn__value = value;
            }
            public bool ShouldSerializevalue() => __pbn__value != null;
            public void Resetvalue() => __pbn__value = null;
            private string __pbn__value;

        }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_RegisterValveIndexComponent_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue("")]
        public string manufacturer_serial_number
        {
            get => __pbn__manufacturer_serial_number ?? "";
            set => __pbn__manufacturer_serial_number = value;
        }
        public bool ShouldSerializemanufacturer_serial_number() => __pbn__manufacturer_serial_number != null;
        public void Resetmanufacturer_serial_number() => __pbn__manufacturer_serial_number = null;
        private string __pbn__manufacturer_serial_number;

        [global::ProtoBuf.ProtoMember(3)]
        [global::System.ComponentModel.DefaultValue("")]
        public string component_code
        {
            get => __pbn__component_code ?? "";
            set => __pbn__component_code = value;
        }
        public bool ShouldSerializecomponent_code() => __pbn__component_code != null;
        public void Resetcomponent_code() => __pbn__component_code = null;
        private string __pbn__component_code;

        [global::ProtoBuf.ProtoMember(4)]
        [global::System.ComponentModel.DefaultValue(EValveIndexComponent.k_EValveIndexComponentUnknown)]
        public EValveIndexComponent component_type
        {
            get => __pbn__component_type ?? EValveIndexComponent.k_EValveIndexComponentUnknown;
            set => __pbn__component_type = value;
        }
        public bool ShouldSerializecomponent_type() => __pbn__component_type != null;
        public void Resetcomponent_type() => __pbn__component_type = null;
        private EValveIndexComponent? __pbn__component_type;

        [global::ProtoBuf.ProtoMember(5)]
        public int estimated_time_registered
        {
            get => __pbn__estimated_time_registered.GetValueOrDefault();
            set => __pbn__estimated_time_registered = value;
        }
        public bool ShouldSerializeestimated_time_registered() => __pbn__estimated_time_registered != null;
        public void Resetestimated_time_registered() => __pbn__estimated_time_registered = null;
        private int? __pbn__estimated_time_registered;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_RegisterValveIndexComponent_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_GetSteamDeckComponents_Request : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string serial_number
        {
            get => __pbn__serial_number ?? "";
            set => __pbn__serial_number = value;
        }
        public bool ShouldSerializeserial_number() => __pbn__serial_number != null;
        public void Resetserial_number() => __pbn__serial_number = null;
        private string __pbn__serial_number;

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue("")]
        public string controller_code
        {
            get => __pbn__controller_code ?? "";
            set => __pbn__controller_code = value;
        }
        public bool ShouldSerializecontroller_code() => __pbn__controller_code != null;
        public void Resetcontroller_code() => __pbn__controller_code = null;
        private string __pbn__controller_code;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class CAccountHardware_GetSteamDeckComponents_Response : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue("")]
        public string json_components
        {
            get => __pbn__json_components ?? "";
            set => __pbn__json_components = value;
        }
        public bool ShouldSerializejson_components() => __pbn__json_components != null;
        public void Resetjson_components() => __pbn__json_components = null;
        private string __pbn__json_components;

    }

    [global::ProtoBuf.ProtoContract()]
    public enum EValveIndexComponent
    {
        k_EValveIndexComponentUnknown = 0,
        k_EValveIndexComponentHMD = 1,
        k_EValveIndexComponentLeftKnuckle = 2,
        k_EValveIndexComponentRightKnuckle = 3,
        k_ETempDTst1 = 4,
        k_ETempDTst2 = 5,
        k_ETempDTst3 = 6,
    }

    public class AccountHardware : SteamUnifiedMessages.UnifiedService
    {
        public override string ServiceName { get; } = "AccountHardware";

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_RegisterSteamController_Response>> RegisterSteamController(CAccountHardware_RegisterSteamController_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_RegisterSteamController_Request, CAccountHardware_RegisterSteamController_Response>( "AccountHardware.RegisterSteamController#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_CompleteSteamControllerRegistration_Response>> CompleteSteamControllerRegistration(CAccountHardware_CompleteSteamControllerRegistration_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_CompleteSteamControllerRegistration_Request, CAccountHardware_CompleteSteamControllerRegistration_Response>( "AccountHardware.CompleteSteamControllerRegistration#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_QueryAccountsRegisteredToSerial_Response>> QueryAccountsRegisteredToController(CAccountHardware_QueryAccountsRegisteredToSerial_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_QueryAccountsRegisteredToSerial_Request, CAccountHardware_QueryAccountsRegisteredToSerial_Response>( "AccountHardware.QueryAccountsRegisteredToController#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_SteamControllerSetConfig_Response>> SetDesiredControllerConfigForApp(CAccountHardware_SteamControllerSetConfig_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_SteamControllerSetConfig_Request, CAccountHardware_SteamControllerSetConfig_Response>( "AccountHardware.SetDesiredControllerConfigForApp#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_SteamControllerGetConfig_Response>> GetDesiredControllerConfigForApp(CAccountHardware_SteamControllerGetConfig_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_SteamControllerGetConfig_Request, CAccountHardware_SteamControllerGetConfig_Response>( "AccountHardware.GetDesiredControllerConfigForApp#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_DeRegisterSteamController_Response>> DeRegisterSteamController(CAccountHardware_DeRegisterSteamController_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_DeRegisterSteamController_Request, CAccountHardware_DeRegisterSteamController_Response>( "AccountHardware.DeRegisterSteamController#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_SetPersonalizationFile_Response>> SetControllerPersonalizationFile(CAccountHardware_SetPersonalizationFile_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_SetPersonalizationFile_Request, CAccountHardware_SetPersonalizationFile_Response>( "AccountHardware.SetControllerPersonalizationFile#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_GetPersonalizationFile_Response>> GetControllerPersonalizationFile(CAccountHardware_GetPersonalizationFile_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_GetPersonalizationFile_Request, CAccountHardware_GetPersonalizationFile_Response>( "AccountHardware.GetControllerPersonalizationFile#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_VRCompatibilityCheck_Response>> VRCompatibilityCheck(CAccountHardware_VRCompatibilityCheck_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_VRCompatibilityCheck_Request, CAccountHardware_VRCompatibilityCheck_Response>( "AccountHardware.VRCompatibilityCheck#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_RegisterValveIndexComponent_Response>> RegisterValveIndexComponent(CAccountHardware_RegisterValveIndexComponent_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_RegisterValveIndexComponent_Request, CAccountHardware_RegisterValveIndexComponent_Response>( "AccountHardware.RegisterValveIndexComponent#1", request );
        }

        public AsyncJob<SteamUnifiedMessages.ServiceMethodResponse<CAccountHardware_GetSteamDeckComponents_Response>> GetSteamDeckComponents(CAccountHardware_GetSteamDeckComponents_Request request)
        {
            return UnifiedMessages.SendMessage<CAccountHardware_GetSteamDeckComponents_Request, CAccountHardware_GetSteamDeckComponents_Response>( "AccountHardware.GetSteamDeckComponents#1", request );
        }

        public override void HandleResponseMsg( string methodName, PacketClientMsgProtobuf packetMsg )
        {
            switch ( methodName )
            {
                case "RegisterSteamController":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_RegisterSteamController_Response>( packetMsg );
                    break;
                case "CompleteSteamControllerRegistration":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_CompleteSteamControllerRegistration_Response>( packetMsg );
                    break;
                case "QueryAccountsRegisteredToController":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_QueryAccountsRegisteredToSerial_Response>( packetMsg );
                    break;
                case "SetDesiredControllerConfigForApp":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_SteamControllerSetConfig_Response>( packetMsg );
                    break;
                case "GetDesiredControllerConfigForApp":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_SteamControllerGetConfig_Response>( packetMsg );
                    break;
                case "DeRegisterSteamController":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_DeRegisterSteamController_Response>( packetMsg );
                    break;
                case "SetControllerPersonalizationFile":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_SetPersonalizationFile_Response>( packetMsg );
                    break;
                case "GetControllerPersonalizationFile":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_GetPersonalizationFile_Response>( packetMsg );
                    break;
                case "VRCompatibilityCheck":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_VRCompatibilityCheck_Response>( packetMsg );
                    break;
                case "RegisterValveIndexComponent":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_RegisterValveIndexComponent_Response>( packetMsg );
                    break;
                case "GetSteamDeckComponents":
                    UnifiedMessages.HandleResponseMsg<CAccountHardware_GetSteamDeckComponents_Response>( packetMsg );
                    break;
            }
        }

        public override void HandleNotificationMsg( string methodName, PacketClientMsgProtobuf packetMsg )
        {
        }
    }

}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion
